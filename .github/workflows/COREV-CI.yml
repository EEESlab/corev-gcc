name: CORE-V Toolchain CI
on: [push, pull_request]
jobs:
  Regression-Tests:
    name: Regression Tests
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."      
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "The workflow is now ready to test your code on the runner."
      - name: Build COREV Toolchain
        run: |
          cd ${{ github.workspace }}
          cd ..
          git clone https://github.com/EEESlab/corev-binutils-gdb.git
          git clone https://github.com/riscv/riscv-newlib.git
          git clone https://github.com/EEESlab/riscv-dejagnu.git
          sudo apt-get update -y
          sudo apt-get install -y expect
          cd riscv-dejagnu
          ./configure
          aclocal
          automake
          sudo make all install
          cd ${{ github.workspace }}
          source build-corev-toolchain.sh --all
          cd ${{ github.workspace }}
          export -p > temp_env
      - name: Install PULP-SDK Dependancies
        run: |
          cd ${{ github.workspace }}
          source temp_env
          sudo apt update
          sudo apt-get install -y build-essential git libftdi-dev libftdi1 doxygen python3-pip libsdl2-dev curl cmake libusb-1.0-0-dev scons gtkwave libsndfile1-dev rsync autoconf automake texinfo libtool pkg-config libsdl2-ttf-dev
          pip install --user argcomplete pyelftools
          cd ${{ github.workspace }}
          export -p > temp_env
      - name: Build PULP-SDK
        run: |
          cd ${{ github.workspace }}
          source temp_env
          cd ..
          git clone https://github.com/EEESlab/gvsoc.git
          cd gvsoc/
          export PULP_RISCV_GCC_TOOLCHAIN=${INSTALL_PREFIX}
          source sourceme.sh
          make build
          cd ${{ github.workspace }}
          export -p > temp_env
      - name: Launch GCC Regression Tests
        run: |
          cd ${{ github.workspace }}
          source temp_env
          cd ${BUILD_STAGE2_PREFIX}
          make check-gcc RUNTESTFLAGS="--target_board=riscv-gvsoc" > regression_report.txt
          cd ${{ github.workspace }}
          export -p > temp_env
      - name: Read Regression Regression Report
        run: |
          cd ${{ github.workspace }}
          source temp_env
          cd ${BUILD_STAGE2_PREFIX}
          cat regression_report.txt
          cd ${{ github.workspace }}
          export -p > temp_env                    
      - name: Launch Regression Tests
        run: |
          cd ${{ github.workspace }}
          source temp_env
          cd ../gvsoc/tests/hello
          dirs=$(dirname $(find . -name "Makefile" -printf "%P\n")); for file in ${dirs}; do cd ${file}; echo ${file}; rm -rf BUILD/; make clean all run; cd -; done;
          cd ../perf
          dirs=$(dirname $(find . -name "Makefile" -printf "%P\n")); for file in ${dirs}; do cd ${file}; echo ${file}; rm -rf BUILD/; make clean all run; cd -; done;
          cd ${{ github.workspace }}
          export -p > temp_env
      - name: List Files in the Repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "This job's status is ${{ job.status }}."
